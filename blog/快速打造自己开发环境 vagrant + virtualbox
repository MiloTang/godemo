  
	<blockquote>vagrant就是一款构建虚拟开发环境的工具，支持window，linux，mac.并且vagrant可以把配置好的环境打包成一个box，分享给其他人直接使用，非常方便统一团队开发环境。<br></blockquote><blockquote>第一步： 安装virtualbox<br></blockquote><blockquote>具体安装包请直接从官网下载：<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">https://www.virtualbox.org/wiki/Downloads&nbsp;&nbsp; </a><br></blockquote><blockquote>第二步： 安装 vagrant<br></blockquote><blockquote>具体安装包请直接从官网下载：<a href="https://www.vagrantup.com/downloads-archive.html" target="_blank">https://www.vagrantup.com/</a><br></blockquote><blockquote>机器支持虚拟化，有时候需要调整bios开启cpu虚拟化。<br></blockquote><blockquote>输入<br>$ vagrant -v<br>Vagrant 1.9.1<br>如此则表示安装成功<br></blockquote><blockquote>第三步：安装GIT，当然你也可以选择用Xshell或者putty，GIT在此处的目的主要是为了使用SSH连接虚拟机<br>具体安装包请直接从官网下载https://git-scm.com/<br></blockquote><blockquote>可以到http://www.vagrantbox.es/下载相应的boxs <br>$ vagrant box add {title} {url}<br>$ vagrant init {title}<br>$ vagrant up<br>当然你也可以提前先下载好box，然后再输入<br>$ vagrant box add {title} {path}<br>$ vagrant init {title}<br>$ vagrant up<br><br>此例安装了centos7.2,提前下在好了centos7x86_64.box<br>$ vagrant&nbsp; box add centos7.2 centos7x86_64.box<br>==&gt; box: Box file was not detected as metadata. Adding it directly...<br>==&gt; box: Adding box 'centos7.2' (v0) for provider:<br>&nbsp;&nbsp;&nbsp; box: Unpacking necessary files from: file://D:/centos7/centos7x86_64.box<br>&nbsp;&nbsp;&nbsp; box:<br>==&gt; box: Successfully added box 'centos7.2' (v0) for 'virtualbox'!<br><br>$ vagrant init centos7.2<br>A `Vagrantfile` has been placed in this directory. You are now<br>ready to `vagrant up` your first virtual environment! Please read<br>the comments in the Vagrantfile as well as documentation on<br>`vagrantup.com` for more information on using Vagrant.<br><br>$ vagrant up<br>Bringing machine 'default' up with 'virtualbox' provider...<br>==&gt; default: Importing base box 'centos7.2'...<br>==&gt; default: Matching MAC address for NAT networking...<br>==&gt; default: Setting the name of the VM: centos7_default_1488781462329_786<br>==&gt; default: Clearing any previously set network interfaces...<br>==&gt; default: Preparing network interfaces based on configuration...<br>&nbsp;&nbsp;&nbsp; default: Adapter 1: nat<br>==&gt; default: Forwarding ports...<br>&nbsp;&nbsp;&nbsp; default: 22 (guest) =&gt; 2222 (host) (adapter 1)<br>==&gt; default: Booting VM...<br>==&gt; default: Waiting for machine to boot. This may take a few minutes...<br>&nbsp;&nbsp;&nbsp; default: SSH address: 127.0.0.1:2222<br>&nbsp;&nbsp;&nbsp; default: SSH username: vagrant<br>&nbsp;&nbsp;&nbsp; default: SSH auth method: private key<br>==&gt; default: Machine booted and ready!<br>==&gt; default: Checking for guest additions in VM...<br>==&gt; default: Mounting shared folders...<br>&nbsp;&nbsp;&nbsp; default: /vagrant =&gt; D:/centos7<br><br>$ vagrant ssh<br>Last login: Wed Dec 28 06:54:01 2016 from 10.0.2.2<br>[vagrant@localhost ~]$<br>现在就可以开启你的boxs之旅了<br>如果需要将更改配置过的box打包，可以先关闭虚拟机然后再打包<br>$ vagrant halt<br>$ vagrant package centos7.2 --output centos7.2x86_64.box --vagrantfile Vagrantfile<br></blockquote><blockquote>Vagrantfile 配置文件<br><strong># -*- mode: ruby -*-<br># vi: set ft=ruby :<br><br># All Vagrant configuration is done below. The "2" in Vagrant.configure<br># configures the configuration version (we support older styles for<br># backwards compatibility). Please don't change it unless you know what<br># you're doing.<br>Vagrant.configure("2") do |config|<br>&nbsp; # The most common configuration options are documented and commented below.<br>&nbsp; # For a complete reference, please see the online documentation at<br>&nbsp; # https://docs.vagrantup.com.<br><br>&nbsp; # Every Vagrant development environment requires a box. You can search for<br>&nbsp; # boxes at https://atlas.hashicorp.com/search.<br>&nbsp; config.vm.box = "centox7.2"<br>&nbsp;<br>&nbsp; # Disable automatic box update checking. If you disable this, then<br>&nbsp; # boxes will only be checked for updates when the user runs<br>&nbsp; # `vagrant box outdated`. This is not recommended.<br>&nbsp; # config.vm.box_check_update = false<br><br>&nbsp; # Create a forwarded port mapping which allows access to a specific port<br>&nbsp; # within the machine from a port on the host machine. In the example below,<br>&nbsp; # accessing "localhost:8080" will access port 80 on the guest machine.<br>&nbsp; # config.vm.network "forwarded_port", guest: 80, host: 8080<br><br>&nbsp; # Create a private network, which allows host-only access to the machine<br>&nbsp; # using a specific IP.<br>&nbsp; # config.vm.network "private_network", ip: "192.168.33.10"<br><br>&nbsp; # Create a public network, which generally matched to bridged network.<br>&nbsp; # Bridged networks make the machine appear as another physical device on<br>&nbsp; # your network.<br>&nbsp; # config.vm.network "public_network"<br><br>&nbsp; # Share an additional folder to the guest VM. The first argument is<br>&nbsp; # the path on the host to the actual folder. The second argument is<br>&nbsp; # the path on the guest to mount the folder. And the optional third<br>&nbsp; # argument is a set of non-required options.<br>&nbsp; # config.vm.synced_folder "../data", "/vagrant_data"<br><br>&nbsp; # Provider-specific configuration so you can fine-tune various<br>&nbsp; # backing providers for Vagrant. These expose provider-specific options.<br>&nbsp; # Example for VirtualBox:<br>&nbsp; #<br>&nbsp; # config.vm.provider "virtualbox" do |vb|<br>&nbsp; #&nbsp;&nbsp; # Display the VirtualBox GUI when booting the machine<br>&nbsp; #&nbsp;&nbsp; vb.gui = true<br>&nbsp; #<br>&nbsp; #&nbsp;&nbsp; # Customize the amount of memory on the VM:<br>&nbsp; #&nbsp;&nbsp; vb.memory = "1024"<br>&nbsp; # end<br>&nbsp; #<br>&nbsp; # View the documentation for the provider you are using for more<br>&nbsp; # information on available options.<br><br>&nbsp; # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies<br>&nbsp; # such as FTP and Heroku are also available. See the documentation at<br>&nbsp; # https://docs.vagrantup.com/v2/push/atlas.html for more information.<br>&nbsp; # config.push.define "atlas" do |push|<br>&nbsp; #&nbsp;&nbsp; push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"<br>&nbsp; # end<br><br>&nbsp; # Enable provisioning with a shell script. Additional provisioners such as<br>&nbsp; # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the<br>&nbsp; # documentation for more information about their specific syntax and use.<br>&nbsp; # config.vm.provision "shell", inline: &lt;&lt;-SHELL<br>&nbsp; #&nbsp;&nbsp; apt-get update<br>&nbsp; #&nbsp;&nbsp; apt-get install -y apache2<br>&nbsp; # SHELL<br>end<br></strong><br></blockquote><br><br><blockquote><p>vagrant init&nbsp; &nbsp; &nbsp; &nbsp; 初始化vagrantfile</p><p>vagrant add box&nbsp; &nbsp;  添加box，自动帮你生成vagrantfile</p><p>vagrant halt&nbsp; &nbsp; &nbsp; &nbsp; 关闭虚拟机</p><p>vagrant destroy&nbsp; &nbsp;  销毁虚拟机</p><p>vagrant ssh&nbsp; &nbsp; &nbsp; &nbsp;  连接虚拟机</p><p>vagrant reload&nbsp; &nbsp; &nbsp; 重新加载vagarntfile文件</p><p>vagrant&nbsp; suspend暂时挂起虚拟机</p><p>vagrant status&nbsp; &nbsp; &nbsp; 查看虚拟机运行状态</p><p>vagrant box list&nbsp; 察看虚拟机列表</p><p>vagrant box remove 删除对应虚拟机<br></p></blockquote>
      

